---
title: "Basic Testing of MVSE Package"
output:
  html_document:
    toc: yes
editor_options: 
  chunk_output_type: console
---

```{r setup, include = FALSE}
knitr::knit_hooks$set(
  margin1 = function(before, options, envir) {
    if (before) par(mgp = c(1.5, .5, 0), bty = "n", plt = c(.105, .97, .13, .97))
    else NULL
  },
  margin2 = function(before, options, envir) {
    if (before) par(mgp = c(2, .5, 0), bty = "n", plt = c(.105, .97, .13, .97))
    else NULL
  },
  margin3 = function(before, options, envir) {
    if (before) par(mgp = c(1.5, .5, 0), bty = "n", mai = rep(.1, 4))
    else NULL
  }
)

knitr::opts_chunk$set(echo       = TRUE,
                      margin1    = TRUE,
                      fig.retina = 2,
                      fig.align  = "center")
```

## Preambule

In this document, we test the various functions of the MVSE package to ensure that the package is running correctly. 

## Packages

The needed packages:

```{r message = FALSE}
library(tidyverse)
library(magrittr)
library(RColorBrewer)
library(MVSE)
```

## Output directory

```{r}
output_dir <- "output/basic_mvse_testing/"
```


## Basic Testing 

### `mvsemodel` objects

Let's start by creating some `mvsemodel` objects. 

```{r}
# climate data
climate_data <- read.csv('input_data/climate/BR_BA_FSA_climate_entire_region.csv')

# user-defined model
priors <- list(mosq_life_exp=list(pars=c(mean=12, sd=2), dist="normal"),
               mosq_inc_per=list(pars=c(mean=7, sd=2), dist="normal"),
               mosq_biting_freq=list(pars=c(mean=0.25, sd=0.01), dist="normal"),
               human_life_exp=list(pars=c(mean=71.1, sd=2), dist="normal"),
               human_inc_per=list(pars=c(mean=5.8, sd=1), dist="normal"),
               human_inf_per=list(pars=c(mean=5.9, sd=1), dist="normal"))
user_model <- mvse_model(model_name="user_test", climate_data=climate_data, priors=priors)

# aegypti
aegypti_model <- mvse_model(model_name="aegypti_test", model_category="aegypti", 
                            climate_data=climate_data)
```

**show**

```{r}
user_model
aegypti_model
```

**print**

```{r}
print(user_model)
print(aegypti_model)
```

**set_priors**

```{r}
set_prior(user_model, "mosq_inc_per", "normal", pars=c(mean=0, sd=1))
#set_prior(aegypti_model, "mosq_inc_per", "normal", pars=c(mean=0, sd=1))
```

**plot_climate**

```{r}
plot_climate(user_model)
plot_climate(aegypti_model)
```

**plot_priors**

```{r}
plot_priors(user_model)
plot_priors(aegypti_model)
plot_priors(aegypti_model, pars="mosq_inc_per", filename=paste0(output_dir, "aegypti_mosq_inc_per"))
```

**fitting**

```{r}
user_fit <- MVSE::fitting(user_model, verbose=TRUE)
aegypti_fit <- MVSE::fitting(aegypti_model, gauJump=c(rho=2, eta=5), verbose=TRUE)
```

### `mvsefit` objects

**show**

```{r}
user_fit
aegypti_fit
```

**print**

```{r}
print(user_fit, probs=c(0.05, 0.25, 0.5, 0.75, 0.975))
print(aegypti_fit, probs=c(0.05, 0.25, 0.5, 0.75, 0.975))
```

**extract**

```{r}
head(MVSE::extract(user_fit, pars="V0")$V0)
```

**mcmc_pairs**

```{r}
MVSE::mcmc_pairs(user_fit)
MVSE::mcmc_pairs(aegypti_fit)
```

**mcmc_traceplot**

```{r}
mcmc_traceplot(user_fit)
mcmc_traceplot(aegypti_fit)
```

**mcmc_factor_dist**

```{r}
mcmc_factor_dist(user_fit)
mcmc_factor_dist(aegypti_fit)
```

**mcmc_index_dist**

```{r}
mcmc_index_dist(user_fit)
mcmc_index_dist(aegypti_fit)
```



